// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestionarioAPI.Infrastructure.Data;

#nullable disable

namespace QuestionarioAPI.Infrastructure.Migrations
{
    [DbContext(typeof(QuestionarioContext))]
    partial class QuestionarioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("QuestionarioAPI.Domain.Entities.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("QuestionarioAPI.Domain.Entities.OpcaoResposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PerguntaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PerguntaId");

                    b.ToTable("OpcoesResposta");
                });

            modelBuilder.Entity("QuestionarioAPI.Domain.Entities.Pergunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubGrupoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoResposta")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SubGrupoId");

                    b.ToTable("Perguntas");
                });

            modelBuilder.Entity("QuestionarioAPI.Domain.Entities.RespostaUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataResposta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATETIME('now')");

                    b.Property<int?>("OpcaoRespostaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PerguntaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RespostaTexto")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlFoto")
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OpcaoRespostaId");

                    b.HasIndex("PerguntaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RespostasUsuario");
                });

            modelBuilder.Entity("QuestionarioAPI.Domain.Entities.SubGrupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GrupoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("SubGrupos");
                });

            modelBuilder.Entity("QuestionarioAPI.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("QuestionarioAPI.Domain.Entities.OpcaoResposta", b =>
                {
                    b.HasOne("QuestionarioAPI.Domain.Entities.Pergunta", "Pergunta")
                        .WithMany("OpcoesResposta")
                        .HasForeignKey("PerguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pergunta");
                });

            modelBuilder.Entity("QuestionarioAPI.Domain.Entities.Pergunta", b =>
                {
                    b.HasOne("QuestionarioAPI.Domain.Entities.SubGrupo", "SubGrupo")
                        .WithMany("Perguntas")
                        .HasForeignKey("SubGrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubGrupo");
                });

            modelBuilder.Entity("QuestionarioAPI.Domain.Entities.RespostaUsuario", b =>
                {
                    b.HasOne("QuestionarioAPI.Domain.Entities.OpcaoResposta", "OpcaoResposta")
                        .WithMany()
                        .HasForeignKey("OpcaoRespostaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QuestionarioAPI.Domain.Entities.Pergunta", "Pergunta")
                        .WithMany()
                        .HasForeignKey("PerguntaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QuestionarioAPI.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Respostas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OpcaoResposta");

                    b.Navigation("Pergunta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("QuestionarioAPI.Domain.Entities.SubGrupo", b =>
                {
                    b.HasOne("QuestionarioAPI.Domain.Entities.Grupo", "Grupo")
                        .WithMany("SubGrupos")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("QuestionarioAPI.Domain.Entities.Grupo", b =>
                {
                    b.Navigation("SubGrupos");
                });

            modelBuilder.Entity("QuestionarioAPI.Domain.Entities.Pergunta", b =>
                {
                    b.Navigation("OpcoesResposta");
                });

            modelBuilder.Entity("QuestionarioAPI.Domain.Entities.SubGrupo", b =>
                {
                    b.Navigation("Perguntas");
                });

            modelBuilder.Entity("QuestionarioAPI.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Respostas");
                });
#pragma warning restore 612, 618
        }
    }
}
